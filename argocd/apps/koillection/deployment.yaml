---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: koillection
  namespace: koillection
  labels:
    app: koillection
spec:
  selector:
    matchLabels:
      app: koillection
  replicas: 1
  template:
    metadata:
      labels:
        app: koillection
    spec:
      containers:
        - name: koillection
          image: koillection/koillection:10.8.10
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: koillection-config
            - secretRef:
                name: koillection-secrets
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /uploads
              name: koillection-uploads
              readOnly: False
          resources: {}
      restartPolicy: Always
      volumes:
        - name: koillection-uploads
          persistentVolumeClaim:
            claimName: koillection-uploads
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: koillection
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - image: postgresql:16.1-alpine3.19
          name: postgresql
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: koillection-secrets
                  key: DB_NAME
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: koillection-secrets
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: koillection-secrets
                  key: DB_PASSWORD
          ports:
            - containerPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: postgresql-data
      restartPolicy: Always
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-data